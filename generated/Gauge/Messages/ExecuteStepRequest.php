<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: messages.proto

namespace Gauge\Messages;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * <pre>
 *&#47; Request sent ot the runner to Execute a Step
 * </pre>
 *
 * Protobuf type <code>gauge.messages.ExecuteStepRequest</code>
 */
class ExecuteStepRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * <pre>
     *&#47; Contains the actual text of the Step being executed. 
     * / This contains the parameters as defined in the Spec.
     * </pre>
     *
     * <code>string actualStepText = 1;</code>
     */
    private $actualStepText = '';
    /**
     * <pre>
     *&#47; Contains the parsed text of the Step being executed. 
     * / The paramters are replaced with placeholders.
     * </pre>
     *
     * <code>string parsedStepText = 2;</code>
     */
    private $parsedStepText = '';
    /**
     * <pre>
     *&#47; Flag to indicate if the execution of the Scenario, containing the current Step, failed.
     * </pre>
     *
     * <code>bool scenarioFailing = 3;</code>
     */
    private $scenarioFailing = false;
    /**
     * <pre>
     *&#47; Collection of parameters applicable to the current Step.
     * </pre>
     *
     * <code>repeated .gauge.messages.Parameter parameters = 4;</code>
     */
    private $parameters;

    public function __construct() {
        \GPBMetadata\Messages::initOnce();
        parent::__construct();
    }

    /**
     * <pre>
     *&#47; Contains the actual text of the Step being executed. 
     * / This contains the parameters as defined in the Spec.
     * </pre>
     *
     * <code>string actualStepText = 1;</code>
     */
    public function getActualStepText()
    {
        return $this->actualStepText;
    }

    /**
     * <pre>
     *&#47; Contains the actual text of the Step being executed. 
     * / This contains the parameters as defined in the Spec.
     * </pre>
     *
     * <code>string actualStepText = 1;</code>
     */
    public function setActualStepText($var)
    {
        GPBUtil::checkString($var, True);
        $this->actualStepText = $var;
    }

    /**
     * <pre>
     *&#47; Contains the parsed text of the Step being executed. 
     * / The paramters are replaced with placeholders.
     * </pre>
     *
     * <code>string parsedStepText = 2;</code>
     */
    public function getParsedStepText()
    {
        return $this->parsedStepText;
    }

    /**
     * <pre>
     *&#47; Contains the parsed text of the Step being executed. 
     * / The paramters are replaced with placeholders.
     * </pre>
     *
     * <code>string parsedStepText = 2;</code>
     */
    public function setParsedStepText($var)
    {
        GPBUtil::checkString($var, True);
        $this->parsedStepText = $var;
    }

    /**
     * <pre>
     *&#47; Flag to indicate if the execution of the Scenario, containing the current Step, failed.
     * </pre>
     *
     * <code>bool scenarioFailing = 3;</code>
     */
    public function getScenarioFailing()
    {
        return $this->scenarioFailing;
    }

    /**
     * <pre>
     *&#47; Flag to indicate if the execution of the Scenario, containing the current Step, failed.
     * </pre>
     *
     * <code>bool scenarioFailing = 3;</code>
     */
    public function setScenarioFailing($var)
    {
        GPBUtil::checkBool($var);
        $this->scenarioFailing = $var;
    }

    /**
     * <pre>
     *&#47; Collection of parameters applicable to the current Step.
     * </pre>
     *
     * <code>repeated .gauge.messages.Parameter parameters = 4;</code>
     */
    public function getParameters()
    {
        return $this->parameters;
    }

    /**
     * <pre>
     *&#47; Collection of parameters applicable to the current Step.
     * </pre>
     *
     * <code>repeated .gauge.messages.Parameter parameters = 4;</code>
     */
    public function setParameters(&$var)
    {
        GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Gauge\Messages\Parameter::class);
        $this->parameters = $var;
    }

}

