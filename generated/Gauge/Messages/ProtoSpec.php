<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: spec.proto

namespace Gauge\Messages;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * <pre>
 *&#47; A proto object representing a Specification
 * / A specification can contain Scenarios or Steps, besides Comments
 * </pre>
 *
 * Protobuf type <code>gauge.messages.ProtoSpec</code>
 */
class ProtoSpec extends \Google\Protobuf\Internal\Message
{
    /**
     * <pre>
     *&#47; Heading describing the Specification
     * </pre>
     *
     * <code>string specHeading = 1;</code>
     */
    private $specHeading = '';
    /**
     * <pre>
     *&#47; A collection of items that come under this step
     * </pre>
     *
     * <code>repeated .gauge.messages.ProtoItem items = 2;</code>
     */
    private $items;
    /**
     * <pre>
     *&#47; Flag indicating if this is a Table Driven Specification. The table is defined in the context, this is different from using a table parameter.
     * </pre>
     *
     * <code>bool isTableDriven = 3;</code>
     */
    private $isTableDriven = false;
    /**
     * <pre>
     *&#47; Contains a 'before' hook failure message. This happens when the `before_spec` hook has an error.
     * </pre>
     *
     * <code>.gauge.messages.ProtoHookFailure preHookFailure = 4;</code>
     */
    private $preHookFailure = null;
    /**
     * <pre>
     *&#47; Contains a 'before' hook failure message. This happens when the `after_hook` hook has an error.
     * </pre>
     *
     * <code>.gauge.messages.ProtoHookFailure postHookFailure = 5;</code>
     */
    private $postHookFailure = null;
    /**
     * <pre>
     *&#47; Contains the filename for that holds this specification.
     * </pre>
     *
     * <code>string fileName = 6;</code>
     */
    private $fileName = '';
    /**
     * <pre>
     *&#47; Contains a list of tags that are defined at the specification level. Scenario tags are not present here.
     * </pre>
     *
     * <code>repeated string tags = 7;</code>
     */
    private $tags;

    public function __construct() {
        \GPBMetadata\Spec::initOnce();
        parent::__construct();
    }

    /**
     * <pre>
     *&#47; Heading describing the Specification
     * </pre>
     *
     * <code>string specHeading = 1;</code>
     */
    public function getSpecHeading()
    {
        return $this->specHeading;
    }

    /**
     * <pre>
     *&#47; Heading describing the Specification
     * </pre>
     *
     * <code>string specHeading = 1;</code>
     */
    public function setSpecHeading($var)
    {
        GPBUtil::checkString($var, True);
        $this->specHeading = $var;
    }

    /**
     * <pre>
     *&#47; A collection of items that come under this step
     * </pre>
     *
     * <code>repeated .gauge.messages.ProtoItem items = 2;</code>
     */
    public function getItems()
    {
        return $this->items;
    }

    /**
     * <pre>
     *&#47; A collection of items that come under this step
     * </pre>
     *
     * <code>repeated .gauge.messages.ProtoItem items = 2;</code>
     */
    public function setItems(&$var)
    {
        GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Gauge\Messages\ProtoItem::class);
        $this->items = $var;
    }

    /**
     * <pre>
     *&#47; Flag indicating if this is a Table Driven Specification. The table is defined in the context, this is different from using a table parameter.
     * </pre>
     *
     * <code>bool isTableDriven = 3;</code>
     */
    public function getIsTableDriven()
    {
        return $this->isTableDriven;
    }

    /**
     * <pre>
     *&#47; Flag indicating if this is a Table Driven Specification. The table is defined in the context, this is different from using a table parameter.
     * </pre>
     *
     * <code>bool isTableDriven = 3;</code>
     */
    public function setIsTableDriven($var)
    {
        GPBUtil::checkBool($var);
        $this->isTableDriven = $var;
    }

    /**
     * <pre>
     *&#47; Contains a 'before' hook failure message. This happens when the `before_spec` hook has an error.
     * </pre>
     *
     * <code>.gauge.messages.ProtoHookFailure preHookFailure = 4;</code>
     */
    public function getPreHookFailure()
    {
        return $this->preHookFailure;
    }

    /**
     * <pre>
     *&#47; Contains a 'before' hook failure message. This happens when the `before_spec` hook has an error.
     * </pre>
     *
     * <code>.gauge.messages.ProtoHookFailure preHookFailure = 4;</code>
     */
    public function setPreHookFailure(&$var)
    {
        GPBUtil::checkMessage($var, \Gauge\Messages\ProtoHookFailure::class);
        $this->preHookFailure = $var;
    }

    /**
     * <pre>
     *&#47; Contains a 'before' hook failure message. This happens when the `after_hook` hook has an error.
     * </pre>
     *
     * <code>.gauge.messages.ProtoHookFailure postHookFailure = 5;</code>
     */
    public function getPostHookFailure()
    {
        return $this->postHookFailure;
    }

    /**
     * <pre>
     *&#47; Contains a 'before' hook failure message. This happens when the `after_hook` hook has an error.
     * </pre>
     *
     * <code>.gauge.messages.ProtoHookFailure postHookFailure = 5;</code>
     */
    public function setPostHookFailure(&$var)
    {
        GPBUtil::checkMessage($var, \Gauge\Messages\ProtoHookFailure::class);
        $this->postHookFailure = $var;
    }

    /**
     * <pre>
     *&#47; Contains the filename for that holds this specification.
     * </pre>
     *
     * <code>string fileName = 6;</code>
     */
    public function getFileName()
    {
        return $this->fileName;
    }

    /**
     * <pre>
     *&#47; Contains the filename for that holds this specification.
     * </pre>
     *
     * <code>string fileName = 6;</code>
     */
    public function setFileName($var)
    {
        GPBUtil::checkString($var, True);
        $this->fileName = $var;
    }

    /**
     * <pre>
     *&#47; Contains a list of tags that are defined at the specification level. Scenario tags are not present here.
     * </pre>
     *
     * <code>repeated string tags = 7;</code>
     */
    public function getTags()
    {
        return $this->tags;
    }

    /**
     * <pre>
     *&#47; Contains a list of tags that are defined at the specification level. Scenario tags are not present here.
     * </pre>
     *
     * <code>repeated string tags = 7;</code>
     */
    public function setTags(&$var)
    {
        GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->tags = $var;
    }

}

