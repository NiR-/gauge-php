<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: spec.proto

namespace Gauge\Messages;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * <pre>
 *&#47; Container for all valid Items under a Specification.
 * </pre>
 *
 * Protobuf type <code>gauge.messages.ProtoItem</code>
 */
class ProtoItem extends \Google\Protobuf\Internal\Message
{
    /**
     * <pre>
     *&#47; Itemtype of the current ProtoItem
     * </pre>
     *
     * <code>.gauge.messages.ProtoItem.ItemType itemType = 1;</code>
     */
    private $itemType = 0;
    /**
     * <pre>
     *&#47; Holds the Step definition. Valid only if ItemType = Step
     * </pre>
     *
     * <code>.gauge.messages.ProtoStep step = 2;</code>
     */
    private $step = null;
    /**
     * <pre>
     *&#47; Holds the Concept definition. Valid only if ItemType = Concept
     * </pre>
     *
     * <code>.gauge.messages.ProtoConcept concept = 3;</code>
     */
    private $concept = null;
    /**
     * <pre>
     *&#47; Holds the Scenario definition. Valid only if ItemType = Scenario
     * </pre>
     *
     * <code>.gauge.messages.ProtoScenario scenario = 4;</code>
     */
    private $scenario = null;
    /**
     * <pre>
     *&#47; Holds the TableDrivenScenario definition. Valid only if ItemType = TableDrivenScenario
     * </pre>
     *
     * <code>.gauge.messages.ProtoTableDrivenScenario tableDrivenScenario = 5;</code>
     */
    private $tableDrivenScenario = null;
    /**
     * <pre>
     *&#47; Holds the Comment definition. Valid only if ItemType = Comment
     * </pre>
     *
     * <code>.gauge.messages.ProtoComment comment = 6;</code>
     */
    private $comment = null;
    /**
     * <pre>
     *&#47; Holds the Table definition. Valid only if ItemType = Table
     * </pre>
     *
     * <code>.gauge.messages.ProtoTable table = 7;</code>
     */
    private $table = null;
    /**
     * <pre>
     *&#47; Holds the Tags definition. Valid only if ItemType = Tags
     * </pre>
     *
     * <code>.gauge.messages.ProtoTags tags = 8;</code>
     */
    private $tags = null;

    public function __construct() {
        \GPBMetadata\Spec::initOnce();
        parent::__construct();
    }

    /**
     * <pre>
     *&#47; Itemtype of the current ProtoItem
     * </pre>
     *
     * <code>.gauge.messages.ProtoItem.ItemType itemType = 1;</code>
     */
    public function getItemType()
    {
        return $this->itemType;
    }

    /**
     * <pre>
     *&#47; Itemtype of the current ProtoItem
     * </pre>
     *
     * <code>.gauge.messages.ProtoItem.ItemType itemType = 1;</code>
     */
    public function setItemType($var)
    {
        GPBUtil::checkEnum($var, \Gauge\Messages\ProtoItem_ItemType::class);
        $this->itemType = $var;
    }

    /**
     * <pre>
     *&#47; Holds the Step definition. Valid only if ItemType = Step
     * </pre>
     *
     * <code>.gauge.messages.ProtoStep step = 2;</code>
     */
    public function getStep()
    {
        return $this->step;
    }

    /**
     * <pre>
     *&#47; Holds the Step definition. Valid only if ItemType = Step
     * </pre>
     *
     * <code>.gauge.messages.ProtoStep step = 2;</code>
     */
    public function setStep(&$var)
    {
        GPBUtil::checkMessage($var, \Gauge\Messages\ProtoStep::class);
        $this->step = $var;
    }

    /**
     * <pre>
     *&#47; Holds the Concept definition. Valid only if ItemType = Concept
     * </pre>
     *
     * <code>.gauge.messages.ProtoConcept concept = 3;</code>
     */
    public function getConcept()
    {
        return $this->concept;
    }

    /**
     * <pre>
     *&#47; Holds the Concept definition. Valid only if ItemType = Concept
     * </pre>
     *
     * <code>.gauge.messages.ProtoConcept concept = 3;</code>
     */
    public function setConcept(&$var)
    {
        GPBUtil::checkMessage($var, \Gauge\Messages\ProtoConcept::class);
        $this->concept = $var;
    }

    /**
     * <pre>
     *&#47; Holds the Scenario definition. Valid only if ItemType = Scenario
     * </pre>
     *
     * <code>.gauge.messages.ProtoScenario scenario = 4;</code>
     */
    public function getScenario()
    {
        return $this->scenario;
    }

    /**
     * <pre>
     *&#47; Holds the Scenario definition. Valid only if ItemType = Scenario
     * </pre>
     *
     * <code>.gauge.messages.ProtoScenario scenario = 4;</code>
     */
    public function setScenario(&$var)
    {
        GPBUtil::checkMessage($var, \Gauge\Messages\ProtoScenario::class);
        $this->scenario = $var;
    }

    /**
     * <pre>
     *&#47; Holds the TableDrivenScenario definition. Valid only if ItemType = TableDrivenScenario
     * </pre>
     *
     * <code>.gauge.messages.ProtoTableDrivenScenario tableDrivenScenario = 5;</code>
     */
    public function getTableDrivenScenario()
    {
        return $this->tableDrivenScenario;
    }

    /**
     * <pre>
     *&#47; Holds the TableDrivenScenario definition. Valid only if ItemType = TableDrivenScenario
     * </pre>
     *
     * <code>.gauge.messages.ProtoTableDrivenScenario tableDrivenScenario = 5;</code>
     */
    public function setTableDrivenScenario(&$var)
    {
        GPBUtil::checkMessage($var, \Gauge\Messages\ProtoTableDrivenScenario::class);
        $this->tableDrivenScenario = $var;
    }

    /**
     * <pre>
     *&#47; Holds the Comment definition. Valid only if ItemType = Comment
     * </pre>
     *
     * <code>.gauge.messages.ProtoComment comment = 6;</code>
     */
    public function getComment()
    {
        return $this->comment;
    }

    /**
     * <pre>
     *&#47; Holds the Comment definition. Valid only if ItemType = Comment
     * </pre>
     *
     * <code>.gauge.messages.ProtoComment comment = 6;</code>
     */
    public function setComment(&$var)
    {
        GPBUtil::checkMessage($var, \Gauge\Messages\ProtoComment::class);
        $this->comment = $var;
    }

    /**
     * <pre>
     *&#47; Holds the Table definition. Valid only if ItemType = Table
     * </pre>
     *
     * <code>.gauge.messages.ProtoTable table = 7;</code>
     */
    public function getTable()
    {
        return $this->table;
    }

    /**
     * <pre>
     *&#47; Holds the Table definition. Valid only if ItemType = Table
     * </pre>
     *
     * <code>.gauge.messages.ProtoTable table = 7;</code>
     */
    public function setTable(&$var)
    {
        GPBUtil::checkMessage($var, \Gauge\Messages\ProtoTable::class);
        $this->table = $var;
    }

    /**
     * <pre>
     *&#47; Holds the Tags definition. Valid only if ItemType = Tags
     * </pre>
     *
     * <code>.gauge.messages.ProtoTags tags = 8;</code>
     */
    public function getTags()
    {
        return $this->tags;
    }

    /**
     * <pre>
     *&#47; Holds the Tags definition. Valid only if ItemType = Tags
     * </pre>
     *
     * <code>.gauge.messages.ProtoTags tags = 8;</code>
     */
    public function setTags(&$var)
    {
        GPBUtil::checkMessage($var, \Gauge\Messages\ProtoTags::class);
        $this->tags = $var;
    }

}

