<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: messages.proto

namespace Gauge\Messages;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * <pre>
 *&#47; Contains details of the Spec execution.
 * </pre>
 *
 * Protobuf type <code>gauge.messages.SpecInfo</code>
 */
class SpecInfo extends \Google\Protobuf\Internal\Message
{
    /**
     * <pre>
     *&#47; Name of the current Spec being executed.
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    private $name = '';
    /**
     * <pre>
     *&#47; Full File path containing the current Spec being executed.
     * </pre>
     *
     * <code>string fileName = 2;</code>
     */
    private $fileName = '';
    /**
     * <pre>
     *&#47; Flag to indicate if the current Spec execution failed.
     * </pre>
     *
     * <code>bool isFailed = 3;</code>
     */
    private $isFailed = false;
    /**
     * <pre>
     *&#47; Tags relevant to the current Spec execution.
     * </pre>
     *
     * <code>repeated string tags = 4;</code>
     */
    private $tags;

    public function __construct() {
        \GPBMetadata\Messages::initOnce();
        parent::__construct();
    }

    /**
     * <pre>
     *&#47; Name of the current Spec being executed.
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * <pre>
     *&#47; Name of the current Spec being executed.
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;
    }

    /**
     * <pre>
     *&#47; Full File path containing the current Spec being executed.
     * </pre>
     *
     * <code>string fileName = 2;</code>
     */
    public function getFileName()
    {
        return $this->fileName;
    }

    /**
     * <pre>
     *&#47; Full File path containing the current Spec being executed.
     * </pre>
     *
     * <code>string fileName = 2;</code>
     */
    public function setFileName($var)
    {
        GPBUtil::checkString($var, True);
        $this->fileName = $var;
    }

    /**
     * <pre>
     *&#47; Flag to indicate if the current Spec execution failed.
     * </pre>
     *
     * <code>bool isFailed = 3;</code>
     */
    public function getIsFailed()
    {
        return $this->isFailed;
    }

    /**
     * <pre>
     *&#47; Flag to indicate if the current Spec execution failed.
     * </pre>
     *
     * <code>bool isFailed = 3;</code>
     */
    public function setIsFailed($var)
    {
        GPBUtil::checkBool($var);
        $this->isFailed = $var;
    }

    /**
     * <pre>
     *&#47; Tags relevant to the current Spec execution.
     * </pre>
     *
     * <code>repeated string tags = 4;</code>
     */
    public function getTags()
    {
        return $this->tags;
    }

    /**
     * <pre>
     *&#47; Tags relevant to the current Spec execution.
     * </pre>
     *
     * <code>repeated string tags = 4;</code>
     */
    public function setTags(&$var)
    {
        GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->tags = $var;
    }

}

