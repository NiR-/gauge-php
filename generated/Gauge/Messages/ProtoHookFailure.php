<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: spec.proto

namespace Gauge\Messages;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * <pre>
 *&#47; A proto object representing a pre-hook failure.
 * / Used to hold failure information for before_suite, before_spec, before_scenario and before_spec hooks.
 * </pre>
 *
 * Protobuf type <code>gauge.messages.ProtoHookFailure</code>
 */
class ProtoHookFailure extends \Google\Protobuf\Internal\Message
{
    /**
     * <pre>
     *&#47; Stacktrace from the failure
     * </pre>
     *
     * <code>string stackTrace = 1;</code>
     */
    private $stackTrace = '';
    /**
     * <pre>
     *&#47; Error message from the failure
     * </pre>
     *
     * <code>string errorMessage = 2;</code>
     */
    private $errorMessage = '';
    /**
     * <pre>
     *&#47; Byte array holding the screenshot taken at the time of failure.
     * </pre>
     *
     * <code>bytes screenShot = 3;</code>
     */
    private $screenShot = '';

    public function __construct() {
        \GPBMetadata\Spec::initOnce();
        parent::__construct();
    }

    /**
     * <pre>
     *&#47; Stacktrace from the failure
     * </pre>
     *
     * <code>string stackTrace = 1;</code>
     */
    public function getStackTrace()
    {
        return $this->stackTrace;
    }

    /**
     * <pre>
     *&#47; Stacktrace from the failure
     * </pre>
     *
     * <code>string stackTrace = 1;</code>
     */
    public function setStackTrace($var)
    {
        GPBUtil::checkString($var, True);
        $this->stackTrace = $var;
    }

    /**
     * <pre>
     *&#47; Error message from the failure
     * </pre>
     *
     * <code>string errorMessage = 2;</code>
     */
    public function getErrorMessage()
    {
        return $this->errorMessage;
    }

    /**
     * <pre>
     *&#47; Error message from the failure
     * </pre>
     *
     * <code>string errorMessage = 2;</code>
     */
    public function setErrorMessage($var)
    {
        GPBUtil::checkString($var, True);
        $this->errorMessage = $var;
    }

    /**
     * <pre>
     *&#47; Byte array holding the screenshot taken at the time of failure.
     * </pre>
     *
     * <code>bytes screenShot = 3;</code>
     */
    public function getScreenShot()
    {
        return $this->screenShot;
    }

    /**
     * <pre>
     *&#47; Byte array holding the screenshot taken at the time of failure.
     * </pre>
     *
     * <code>bytes screenShot = 3;</code>
     */
    public function setScreenShot($var)
    {
        GPBUtil::checkString($var, False);
        $this->screenShot = $var;
    }

}

