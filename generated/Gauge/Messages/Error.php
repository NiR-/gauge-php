<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: spec.proto

namespace Gauge\Messages;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * <pre>
 *&#47; A proto object representing an error in spec/Scenario.
 * </pre>
 *
 * Protobuf type <code>gauge.messages.Error</code>
 */
class Error extends \Google\Protobuf\Internal\Message
{
    /**
     * <pre>
     *&#47; Holds the type of error
     * </pre>
     *
     * <code>.gauge.messages.Error.ErrorType type = 1;</code>
     */
    private $type = 0;
    /**
     * <pre>
     *&#47; Holds the filename.
     * </pre>
     *
     * <code>string filename = 2;</code>
     */
    private $filename = '';
    /**
     * <pre>
     *&#47; Holds the line number of the error in file.
     * </pre>
     *
     * <code>int32 lineNumber = 3;</code>
     */
    private $lineNumber = 0;
    /**
     * <pre>
     *&#47; Holds the error message.
     * </pre>
     *
     * <code>string message = 4;</code>
     */
    private $message = '';

    public function __construct() {
        \GPBMetadata\Spec::initOnce();
        parent::__construct();
    }

    /**
     * <pre>
     *&#47; Holds the type of error
     * </pre>
     *
     * <code>.gauge.messages.Error.ErrorType type = 1;</code>
     */
    public function getType()
    {
        return $this->type;
    }

    /**
     * <pre>
     *&#47; Holds the type of error
     * </pre>
     *
     * <code>.gauge.messages.Error.ErrorType type = 1;</code>
     */
    public function setType($var)
    {
        GPBUtil::checkEnum($var, \Gauge\Messages\Error_ErrorType::class);
        $this->type = $var;
    }

    /**
     * <pre>
     *&#47; Holds the filename.
     * </pre>
     *
     * <code>string filename = 2;</code>
     */
    public function getFilename()
    {
        return $this->filename;
    }

    /**
     * <pre>
     *&#47; Holds the filename.
     * </pre>
     *
     * <code>string filename = 2;</code>
     */
    public function setFilename($var)
    {
        GPBUtil::checkString($var, True);
        $this->filename = $var;
    }

    /**
     * <pre>
     *&#47; Holds the line number of the error in file.
     * </pre>
     *
     * <code>int32 lineNumber = 3;</code>
     */
    public function getLineNumber()
    {
        return $this->lineNumber;
    }

    /**
     * <pre>
     *&#47; Holds the line number of the error in file.
     * </pre>
     *
     * <code>int32 lineNumber = 3;</code>
     */
    public function setLineNumber($var)
    {
        GPBUtil::checkInt32($var);
        $this->lineNumber = $var;
    }

    /**
     * <pre>
     *&#47; Holds the error message.
     * </pre>
     *
     * <code>string message = 4;</code>
     */
    public function getMessage()
    {
        return $this->message;
    }

    /**
     * <pre>
     *&#47; Holds the error message.
     * </pre>
     *
     * <code>string message = 4;</code>
     */
    public function setMessage($var)
    {
        GPBUtil::checkString($var, True);
        $this->message = $var;
    }

}

