<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: spec.proto

namespace Gauge\Messages;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * <pre>
 *&#47; A proto object representing Fragment.
 * / Fragments, put together make up A Step
 * </pre>
 *
 * Protobuf type <code>gauge.messages.Fragment</code>
 */
class Fragment extends \Google\Protobuf\Internal\Message
{
    /**
     * <pre>
     *&#47; Type of Fragment, valid values are Text, Parameter
     * </pre>
     *
     * <code>.gauge.messages.Fragment.FragmentType fragmentType = 1;</code>
     */
    private $fragmentType = 0;
    /**
     * <pre>
     *&#47; Text part of the Fragment, valid only if FragmentType=Text
     * </pre>
     *
     * <code>string text = 2;</code>
     */
    private $text = '';
    /**
     * <pre>
     *&#47; Parameter part of the Fragment, valid only if FragmentType=Parameter
     * </pre>
     *
     * <code>.gauge.messages.Parameter parameter = 3;</code>
     */
    private $parameter = null;

    public function __construct() {
        \GPBMetadata\Spec::initOnce();
        parent::__construct();
    }

    /**
     * <pre>
     *&#47; Type of Fragment, valid values are Text, Parameter
     * </pre>
     *
     * <code>.gauge.messages.Fragment.FragmentType fragmentType = 1;</code>
     */
    public function getFragmentType()
    {
        return $this->fragmentType;
    }

    /**
     * <pre>
     *&#47; Type of Fragment, valid values are Text, Parameter
     * </pre>
     *
     * <code>.gauge.messages.Fragment.FragmentType fragmentType = 1;</code>
     */
    public function setFragmentType($var)
    {
        GPBUtil::checkEnum($var, \Gauge\Messages\Fragment_FragmentType::class);
        $this->fragmentType = $var;
    }

    /**
     * <pre>
     *&#47; Text part of the Fragment, valid only if FragmentType=Text
     * </pre>
     *
     * <code>string text = 2;</code>
     */
    public function getText()
    {
        return $this->text;
    }

    /**
     * <pre>
     *&#47; Text part of the Fragment, valid only if FragmentType=Text
     * </pre>
     *
     * <code>string text = 2;</code>
     */
    public function setText($var)
    {
        GPBUtil::checkString($var, True);
        $this->text = $var;
    }

    /**
     * <pre>
     *&#47; Parameter part of the Fragment, valid only if FragmentType=Parameter
     * </pre>
     *
     * <code>.gauge.messages.Parameter parameter = 3;</code>
     */
    public function getParameter()
    {
        return $this->parameter;
    }

    /**
     * <pre>
     *&#47; Parameter part of the Fragment, valid only if FragmentType=Parameter
     * </pre>
     *
     * <code>.gauge.messages.Parameter parameter = 3;</code>
     */
    public function setParameter(&$var)
    {
        GPBUtil::checkMessage($var, \Gauge\Messages\Parameter::class);
        $this->parameter = $var;
    }

}

